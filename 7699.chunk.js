"use strict";(self.webpackChunkreact_esri_template=self.webpackChunkreact_esri_template||[]).push([[7699],{57699:(e,t,a)=>{a.r(t),a.d(t,{execute:()=>l});var s=a(32656),r=a(7584),n=a(59472);let i;function l(e,t={}){let a=t.responseType;a?"array-buffer"!==a&&"blob"!==a&&"json"!==a&&"native"!==a&&"native-request-init"!==a&&"text"!==a&&(a="text"):a="json";const l=(0,n.Wg)(t.signal);return delete t.signal,r.Z.invokeStaticMessage("request",{url:e,options:t},{signal:l}).then((async r=>{let n,o,u,c,b;if(r.data)if(r.data instanceof ArrayBuffer){if(!("json"!==a&&"text"!==a&&"blob"!==a||(n=new Blob([r.data]),"json"!==a&&"text"!==a||(i||(i=new FileReaderSync),c=i.readAsText(n),"json"!==a)))){try{o=JSON.parse(c||null)}catch(a){const r={...a,url:e,requestOptions:t};throw new s.Z("request:server",a.message,r)}if(o.error){const a={...o.error,url:e,requestOptions:t};throw new s.Z("request:server",o.error.message,a)}}}else"native"===a&&(r.data.signal=l,u=await fetch(r.data.url,r.data));switch(a){case"blob":b=n;break;case"json":b=o;break;case"native":b=u;break;case"text":b=c;break;default:b=r.data}return{data:b,requestOptions:t,ssl:r.ssl,url:e}}))}}}]);